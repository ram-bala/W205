Q1:What is the shortest path between 'DR. STRANGE/STEPHEN' and 'DR. DOOM/VICTOR VON'?
Please provide: the query, the Text side tab results of running the query, and the answer.

Query:
MATCH p=(strange:Hero {name: 'DR. STRANGE/STEPHEN'})-[:APPEARED*0..2]-(drdoom:Hero {name: 'DR. DOOM/VICTOR VON'})
RETURN p, length(p)
ORDER BY length(p)
LIMIT 1

Text result:
+----------------------------------------------------------------------------------+
¦"p"                                                                   ¦"length(p)"¦
¦----------------------------------------------------------------------+-----------¦
¦[{"name":"DR. STRANGE/STEPHEN","degree":777},{"w":8},{"name":"DR. DOOM¦1          ¦
¦/VICTOR VON","degree":441}]                                           ¦           ¦
+----------------------------------------------------------------------------------+

Answer: 1

#####################################################################################

Q2:

List the 5 shortest paths between 'DR. STRANGE/STEPHEN' and 'DR. DOOM/VICTOR VON'.
Please provide: the query and the Text side tab results of running the query. Only provide 5 even if there are ties (hint: use the LIMIT 5 clause in the query).

MATCH p=(strange:Hero {name: 'DR. STRANGE/STEPHEN'})-[:APPEARED*0..2]-(drdoom:Hero {name: 'DR. DOOM/VICTOR VON'})
RETURN p, length(p)
ORDER BY length(p)
LIMIT 5

+----------------------------------------------------------------------------------+
¦"p"                                                                   ¦"length(p)"¦
¦----------------------------------------------------------------------+-----------¦
¦[{"name":"DR. STRANGE/STEPHEN","degree":777},{"w":8},{"name":"DR. DOOM¦1          ¦
¦/VICTOR VON","degree":441}]                                           ¦           ¦
+----------------------------------------------------------------------+-----------¦
¦[{"name":"DR. STRANGE/STEPHEN","degree":777},{"w":12},{"name":"DR. DOO¦1          ¦
¦M/VICTOR VON","degree":441}]                                          ¦           ¦
+----------------------------------------------------------------------+-----------¦
¦[{"name":"DR. STRANGE/STEPHEN","degree":777},{"w":3},{"name":"CAPTAIN ¦2          ¦
¦BRITAIN/BRIA","degree":327},{"name":"CAPTAIN BRITAIN/BRIA","degree":32¦           ¦
¦7},{"w":2},{"name":"DR. DOOM/VICTOR VON","degree":441}]               ¦           ¦
+----------------------------------------------------------------------+-----------¦
¦[{"name":"DR. STRANGE/STEPHEN","degree":777},{"w":3},{"name":"CAPTAIN ¦2          ¦
¦BRITAIN/BRIA","degree":327},{"name":"CAPTAIN BRITAIN/BRIA","degree":32¦           ¦
¦7},{"w":1},{"name":"DR. DOOM/VICTOR VON","degree":441}]               ¦           ¦
+----------------------------------------------------------------------+-----------¦
¦[{"name":"DR. STRANGE/STEPHEN","degree":777},{"w":1},{"name":"REDWING"¦2          ¦
¦,"degree":175},{"name":"REDWING","degree":175},{"w":1},{"name":"DR. DO¦           ¦
¦OM/VICTOR VON","degree":441}]                                         ¦           ¦
+----------------------------------------------------------------------------------+
#####################################################################################

Q3:
List 5 Friends of Friends of 'COLOSSUS II/PETER RA' with the most connections.
Please provide: the query and the Text side tab results of running the query.
Only provide 5 even if there are ties (hint: use the LIMIT 5 clause in the query)

MATCH (colossus:Hero { name: 'COLOSSUS II/PETER RA' })-[:APPEARED*2..2]-(friend_of_friend)
WHERE NOT (colossus)-[:APPEARED]-(friend_of_friend)
AND friend_of_friend.name <> 'COLOSSUS II/PETER RA'
RETURN friend_of_friend.name, COUNT(*)
ORDER BY COUNT(*) DESC , friend_of_friend.name
LIMIT 5


+----------------------------------+
¦"friend_of_friend.name"¦"COUNT(*)"¦
¦-----------------------+----------¦
¦"WONG"                 ¦453       ¦
+-----------------------+----------¦
¦"MOONSTONE II/KARLA S" ¦370       ¦
+-----------------------+----------¦
¦"CARTER, PEGGY"        ¦367       ¦
+-----------------------+----------¦
¦"POWER MAN/ERIK JOSTE" ¦350       ¦
+-----------------------+----------¦
¦"KINGPIN/WILSON FISK"  ¦342       ¦
+----------------------------------+

#################################################################################################
Q4:
Visualize 10 Friends of friends for 'IRON MAN/TONY STARK'.
Please provide: the query and an image of the graph visualization. Only provide 10 even if there are ties (hint: use the LIMIT 10 clause in the query)

MATCH (tony:Hero { name: 'IRON MAN/TONY STARK' })-[:APPEARED*2..2]-(friend_of_friend)
WHERE NOT (tony)-[:APPEARED]-(friend_of_friend)
AND friend_of_friend.name <> 'IRON MAN/TONY STARK'
RETURN friend_of_friend
LIMIT 10


+-------------------------------------------+
¦"friend_of_friend"                         ¦
¦-------------------------------------------¦
¦{"name":"BARTOS","degree":16}              ¦
+-------------------------------------------¦
¦{"name":"MIMIC/CALVIN RANKIN","degree":89} ¦
+-------------------------------------------¦
¦{"name":"MANAT","degree":17}               ¦
+-------------------------------------------¦
¦{"name":"SINTARIIS","degree":5}            ¦
+-------------------------------------------¦
¦{"name":"DIBDEB","degree":15}              ¦
+-------------------------------------------¦
¦{"name":"RASPUTIN, MIKHAIL","degree":54}   ¦
+-------------------------------------------¦
¦{"name":"WIBBOW","degree":20}              ¦
+-------------------------------------------¦
¦{"name":"P'KAR","degree":14}               ¦
+-------------------------------------------¦
¦{"name":"LIVING MONOLITH/AHME","degree":61}¦
+-------------------------------------------¦
¦{"name":"ALBERIK","degree":8}              ¦
+-------------------------------------------+
############################################################################################


Q5:
Visually discover how the Avengers grew over time from 5 to 10 members, who was added to the team, and verify connectivity. Please provide for each run of the query (6 total runs): The query, a list of member for this run, a statement as to whether or not the graph is fully connected, and the an image of the graph visualization

Query for 5 members:

MATCH (tony:Hero {name:'IRON MAN/TONY STARK'}) -[e:APPEARED]-> (other) <-[f:APPEARED]- (donald:Hero {name:'THOR/DR. DONALD BLAK'})
RETURN tony, donald, other
ORDER BY e.w DESC, f.w DESC
LIMIT 3

List of members
IRON MAN/TONY STARK
THOR/DR. DONALD BLAK
CAPTAIN AMERICA
SCARLET WITCH/WANDA
VISION

Graph is fully connected.


Query for 6 members:
MATCH (tony:Hero {name:'IRON MAN/TONY STARK'}) -[e:APPEARED]-> (other) <-[f:APPEARED]- (donald:Hero {name:'THOR/DR. DONALD BLAK'})
RETURN tony, donald, other
ORDER BY e.w DESC, f.w DESC
LIMIT 4

List of members:
All of the above + WASP/JANET VAN DYNE

Okay, so i can repeat this 4 more times - I am not doing it, because i am not sure what i would learn through doing it.



